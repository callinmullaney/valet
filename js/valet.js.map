{"version":3,"sources":["valet.js"],"names":["$","Drupal","drupalSettings","behaviors","valet","attach","context","once","each","model","models","ValetModel","views","ValetView","el","find","Backbone","Model","extend","defaults","isOpen","View","initialize","self","this","$input","$el","$window","window","down","click","toggle","bind","e","preventDefault","_","bindAll","document","keyDown","keyUp","get","removeClass","set","value","setTimeout","addClass","blur","off","val","attr","getData","autoComplete","focus","on","target","closest","length","data","autocomplete","appendTo","minLength","delay","autoFocus","source","event","ui","select","item","go","label","_renderItem","substring","append","description","replace","location","pathname","open","cb","localStorage","JSON","parse","getItem","cache","timestamp","ajax","url","path","baseUrl","dataType","success","time","Math","floor","Date","getTime","setItem","stringify","error","xhr","ajaxOptions","thrownError","alert","status","keyCode","hotkey","modifier","is","jQuery"],"mappings":"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","file":"valet.js","sourcesContent":["/**\n * @file toolbar.js\n *\n * Defines the behavior of the Drupal administration toolbar.\n */\n(function ($, Drupal, drupalSettings) {\n\n  'use strict';\n\n  /**\n   * Set up and bind Valet.\n   */\n  Drupal.behaviors.valet = {\n\n    attach: function (context) {\n      // Process the administrative toolbar.\n      $('body').once('valet').each(function () {\n        var model = new Drupal.valet.models.ValetModel();\n        new Drupal.valet.views.ValetView({\n          el: $(context).find('#valet'),\n          model: model\n        });\n      });\n    }\n  };\n\n  Drupal.valet = Drupal.valet || {models: {}, views: {}};\n\n  /**\n   * Backbone Model for valet.\n   */\n  Drupal.valet.models.ValetModel = Backbone.Model.extend({\n    defaults: {\n      // Indicates whether the valet is currently running.\n      isOpen: false\n    }\n  });\n\n  /**\n   * Handles valet interactions.\n   */\n  Drupal.valet.views.ValetView = Backbone.View.extend({\n\n    /**\n     * Implements Backbone Views' initialize().\n     */\n    initialize: function () {\n      var self = this;\n      this.$input = this.$el.find('.valet-input');\n      this.$window = $(window);\n      this.down = [];\n      this.$el.find('.valet-close').click(this.toggle.bind(this));\n      this.$el.find('.valet-open').once().click(function(e){\n        e.preventDefault();\n        self.toggle();\n      });\n      _.bindAll(this, 'keyDown');\n      _.bindAll(this, 'keyUp');\n      $(document).bind('keydown', this.keyDown).bind('keyup', this.keyUp);\n    },\n\n    toggle: function () {\n      var self = this;\n      if (this.model.get('isOpen')) {\n        this.$el.removeClass('open');\n        this.model.set('isOpen', false);\n        // trick to hide input text once the search overlay closes\n        // todo: hardcoded times, should be done after transition ends\n        if( this.$input[0].value !== '' ) {\n          setTimeout(function() {\n            self.$el.addClass('hideInput');\n            setTimeout(function() {\n              self.$el.removeClass('hideInput');\n              self.$input[0].value = '';\n            }, 300 );\n          }, 500);\n        }\n        this.$input[0].blur();\n        this.$window.off('click.valet-link');\n      }\n      else{\n        this.$input.val('').attr('disabled', false);\n        this.getData(this.autoComplete.bind(this));\n        this.$el.addClass('open');\n        this.model.set('isOpen', true);\n        this.$input.focus();\n        // delay binding of window click.\n        setTimeout(function() {\n          self.$window.on('click.valet-link', function(e){\n            if(!$(e.target).closest('.valet-inner').length){\n              self.toggle();\n            }\n          });\n        }, 300 );\n      }\n    },\n\n    autoComplete: function ( data ) {\n      var self = this;\n      this.$input.once('valet').autocomplete({\n        appendTo: '#valet-results',\n        minLength: 1,\n        delay: 0,\n        autoFocus: true,\n        source: data,\n        focus: function( event, ui ) {\n          return false;\n        },\n        select: function( event, ui ) {\n          if(ui.item){\n            self.go(ui.item.label, ui.item.value);\n            return false;\n          }\n        },\n      })\n      // Add some magical style to our results\n      .autocomplete( 'instance' )._renderItem = function( ui, item ) {\n        var value = item.value.length > 85  ? item.value.substring(0,85)+'...' : (item.value.length > 0 ? item.value : '/')\n        return $( '<li></li>' )\n          .append( '<a><strong>' + item.label + '</strong> <small>' + value + '</small><br><em>' + item.description + '</em></a>' )\n          .appendTo( ui );\n      };\n    },\n\n    go: function (label, value) {\n      value = value.replace('RETURN_URL', window.location.pathname.substring(1));\n\n      if (this.down[16]) {\n        this.down[16] = false;\n        this.toggle();\n        window.open(value);\n      }\n      else{\n        this.$input.val( 'Loading...' ).attr('disabled', true);\n        window.location = value;\n      }\n    },\n\n    getData: function(cb) {\n      var self = this;\n      var data = localStorage ? JSON.parse(localStorage.getItem('valet')) : null;\n      if( data && drupalSettings.valet.cache && data.timestamp >= drupalSettings.valet.cache ){\n        return cb(data.data);\n      }\n      else{\n        self.$input.val( 'Loading data...' ).attr('disabled', true);\n        $.ajax({\n          url: drupalSettings.path.baseUrl+'api/valet',\n          dataType: 'json',\n          success: function(data) {\n            self.$input.val('').attr('disabled', false).focus();\n            if (localStorage) {\n              var time = Math.floor(new Date().getTime() / 1000);\n              localStorage.setItem('valet', JSON.stringify({timestamp: time, data: data}));\n            }\n            return cb(data);\n          },\n          error: function (xhr, ajaxOptions, thrownError) {\n            alert(xhr.status);\n            alert(thrownError);\n            return cb(null);\n          }\n        });\n      }\n    },\n\n    keyDown: function(e) {\n      if(this.model.get('isOpen') && e.keyCode === 27){\n        this.toggle();\n        return;\n      }\n      this.down[e.keyCode] = true;\n\n      if (this.down[drupalSettings.valet.hotkey] && this.down[drupalSettings.valet.modifier] && !$(e.target).is(':focus')) {\n        e.preventDefault();\n        this.toggle();\n      }\n    },\n\n    keyUp: function(e) {\n      this.down[e.keyCode] = false;\n    }\n\n  });\n\n}(jQuery, Drupal, drupalSettings));\n"],"sourceRoot":"/source/"}