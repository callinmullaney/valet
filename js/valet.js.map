{"version":3,"sources":["valet.js"],"names":["$","Drupal","drupalSettings","filter","array","term","matcher","RegExp","ui","autocomplete","escapeRegex","grep","value","test","command","label","proto","prototype","initSource","_initSource","extend","isArray","this","options","source","request","response","call","behaviors","valet","attach","context","once","each","model","models","ValetModel","views","ValetView","el","find","Backbone","Model","defaults","isOpen","View","initialize","self","$input","$el","$window","window","$body","down","click","toggle","bind","e","preventDefault","_","bindAll","document","keyDown","keyUp","appendTo","minLength","delay","autoFocus","focus","event","select","item","go","_renderItem","ul","length","substring","append","description","_renderMenu","items","slice","index","_renderItemData","get","removeClass","set","setTimeout","addClass","blur","off","val","attr","getData","autoComplete","on","target","closest","data","replace","location","pathname","open","cb","localStorage","JSON","parse","getItem","cache","timestamp","ajax","url","path","baseUrl","dataType","success","time","Math","floor","Date","getTime","setItem","stringify","error","xhr","ajaxOptions","thrownError","alert","status","keyCode","hotkey","modifier","is","jQuery"],"mappings":"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","file":"valet.js","sourcesContent":["/**\n * @file toolbar.js\n *\n * Defines the behavior of the Drupal administration toolbar.\n */\n(function ($, Drupal, drupalSettings) {\n\n  'use strict';\n\n  // Remap the filter functions for autocomplete to recognise the\n  // extra value \"command\". Borrowed from the wonderful coffee project.\n  var proto = $.ui.autocomplete.prototype,\n    initSource = proto._initSource;\n\n  function filter(array, term) {\n    var matcher = new RegExp($.ui.autocomplete.escapeRegex(term), 'i');\n    return $.grep(array, function (value) {\n      return matcher.test(value.command) || matcher.test(value.label) || matcher.test(value.value);\n    });\n  }\n\n  $.extend(proto, {\n    _initSource: function () {\n      if ($.isArray(this.options.source)) {\n        this.source = function (request, response) {\n          response(filter(this.options.source, request.term));\n        };\n      }\n      else {\n        initSource.call(this);\n      }\n    }\n  });\n\n  /**\n   * Set up and bind Valet.\n   */\n  Drupal.behaviors.valet = {\n\n    attach: function (context) {\n      // Process the administrative toolbar.\n      $('body').once('valet').each(function () {\n        var model = new Drupal.valet.models.ValetModel();\n        new Drupal.valet.views.ValetView({\n          el: $(context).find('#valet'),\n          model: model\n        });\n      });\n    }\n  };\n\n  Drupal.valet = Drupal.valet || {models: {}, views: {}};\n\n  /**\n   * Backbone Model for valet.\n   */\n  Drupal.valet.models.ValetModel = Backbone.Model.extend({\n    defaults: {\n      // Indicates whether the valet is currently running.\n      isOpen: false\n    }\n  });\n\n  /**\n   * Handles valet interactions.\n   */\n  Drupal.valet.views.ValetView = Backbone.View.extend({\n\n    /**\n     * Implements Backbone Views' initialize().\n     */\n    initialize: function () {\n      var self = this;\n      this.$input = this.$el.find('.valet-input');\n      this.$window = $(window);\n      this.$body = $('body');\n      this.down = [];\n      this.$el.find('.valet-close').click(this.toggle.bind(this));\n      this.$el.find('.valet-open').click(function(e){\n        e.preventDefault();\n        self.toggle();\n      });\n      _.bindAll(this, 'keyDown');\n      _.bindAll(this, 'keyUp');\n      $(document).bind('keydown', this.keyDown).bind('keyup', this.keyUp);\n      $('.toolbar-icon-valet').click(function(e) {\n        e.preventDefault();\n        self.toggle();\n      });\n      // Autocomplete setup\n      this.$input.autocomplete({\n        appendTo: '#valet-results',\n        minLength: 1,\n        delay: 0,\n        autoFocus: true,\n        // source: data,\n        focus: function( event, ui ) {\n          return false;\n        },\n        select: function( event, ui ) {\n          if(ui.item){\n            self.go(ui.item.label, ui.item.value);\n            return false;\n          }\n        },\n      });\n      // Add some magical style to our results\n      this.$input.autocomplete('instance')._renderItem = function( ul, item ) {\n        var value = item.value.length > 85  ? item.value.substring(0,85)+'...' : (item.value.length > 0 ? item.value : '/')\n        return $('<li></li>')\n          .append('<a><strong>' + item.label + '</strong> <small>' + value + '</small><br><em>' + item.description + '</em></a>' )\n          .appendTo( ul );\n      };\n      // Limit the max results\n      this.$input.autocomplete('instance')._renderMenu = function( ul, items ) {\n        var self = this;\n        items = items.slice(0, 6);\n        $.each(items, function (index, item) {\n          self._renderItemData(ul, item);\n        });\n      };\n    },\n\n    toggle: function () {\n      var self = this;\n      if (this.model.get('isOpen')) {\n        this.$el.removeClass('open');\n        this.$body.removeClass('valet-open');\n        this.model.set('isOpen', false);\n        // trick to hide input text once the search overlay closes\n        // todo: hardcoded times, should be done after transition ends\n        if( this.$input[0].value !== '' ) {\n          setTimeout(function() {\n            self.$el.addClass('hideInput');\n            setTimeout(function() {\n              self.$el.removeClass('hideInput');\n              self.$input[0].value = '';\n            }, 300 );\n          }, 500);\n        }\n        this.$input[0].blur();\n        this.$window.off('click.valet-link');\n      }\n      else{\n        this.$input.val('').attr('disabled', false);\n        this.getData(this.autoComplete.bind(this));\n        this.$el.addClass('open');\n        this.$body.addClass('valet-open');\n        this.model.set('isOpen', true);\n        this.$input.focus();\n        // delay binding of window click.\n        setTimeout(function() {\n          self.$window.on('click.valet-link', function(e){\n            if(!$(e.target).closest('.valet-inner').length){\n              self.toggle();\n            }\n          });\n        }, 300 );\n      }\n    },\n\n    autoComplete: function ( data ) {\n      var self = this;\n      this.$input.autocomplete('option', { source: data });\n    },\n\n    go: function (label, value) {\n      value = value.replace('RETURN_URL', window.location.pathname.substring(1));\n\n      if (this.down[16]) {\n        this.down[16] = false;\n        this.toggle();\n        window.open(value);\n      }\n      else{\n        this.$input.val( 'Loading...' ).attr('disabled', true);\n        window.location = value;\n      }\n    },\n\n    getData: function(cb) {\n      var self = this;\n      var data = localStorage ? JSON.parse(localStorage.getItem('valet')) : null;\n      if( data && drupalSettings.valet.cache && data.timestamp >= drupalSettings.valet.cache ){\n        return cb(data.data);\n      }\n      else{\n        self.$input.val( 'Loading data...' ).attr('disabled', true);\n        $.ajax({\n          url: drupalSettings.path.baseUrl+'api/valet',\n          dataType: 'json',\n          success: function(data) {\n            self.$input.val('').attr('disabled', false).focus();\n            if (localStorage) {\n              var time = Math.floor(new Date().getTime() / 1000);\n              localStorage.setItem('valet', JSON.stringify({timestamp: time, data: data}));\n            }\n            return cb(data);\n          },\n          error: function (xhr, ajaxOptions, thrownError) {\n            alert(xhr.status);\n            alert(thrownError);\n            return cb(null);\n          }\n        });\n      }\n    },\n\n    keyDown: function(e) {\n      if(this.model.get('isOpen') && e.keyCode === 27){\n        this.toggle();\n        return;\n      }\n      this.down[e.keyCode] = true;\n\n      if (this.down[drupalSettings.valet.hotkey] && this.down[drupalSettings.valet.modifier] && !$(e.target).is(':focus')) {\n        e.preventDefault();\n        this.toggle();\n      }\n    },\n\n    keyUp: function(e) {\n      this.down[e.keyCode] = false;\n    }\n\n  });\n\n}(jQuery, Drupal, drupalSettings));\n"],"sourceRoot":"/source/"}